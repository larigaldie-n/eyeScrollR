<<<<<<< HEAD
[{"path":[]},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"understand-the-use-case-scenario","dir":"Articles","previous_headings":"Before you start","what":"Understand the use-case scenario","title":"Introduction to eyeScrollR","text":"Consider situation, participant fixates 5 different areas screen (represented red green spots) browsing website, scrolls , fixates 5 exact areas:  Although red fixation spots indeed match content situations, green fixations spots don’t; analysis content fixated convert screen coordinates “content coordinates”. words, unscrolled content screen single long image, like fixations correctly placed , :  … exactly package . top , may often want get rid anything outside website (browser header, Windows bar bottom, …), areas websites might fixed follow screen participant scrolls . eyeScrollR equipped deal situations. Please note now, eyeScrollR tested data iMotions software. Future support software expected, yet guaranteed.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"set-up-the-experimental-setting","dir":"Articles","previous_headings":"Before you start","what":"Set up the experimental setting","title":"Introduction to eyeScrollR","text":"Although eyeScrollR dealing participant’s data, getting reliable accurate placements timings may require change browser settings. steps completely necessary, omitted may often result pixels inaccuracy fixation’s coordinates, may temporarily ahead time ~150ms scrolling blur periods. Quite rarely, may mess whole file; especially participant fast-paced erratic scrolling pattern. recommended deactivate smooth scrolling browser, get rid side scrollbar. Chrome/Chromium browsers, deactivating smooth scrolling can easily done typing “chrome://flags/” address bar, disabling “Smooth Scrolling” option. Similarly, scrollbar can hidden enabling “Overlay Scrollbars” option. Firefox browsers, free extensions can easily found hide scrollbar smooth scrolling can deactivated directly settings menu.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"anticipate-the-necessary-information-material","dir":"Articles","previous_headings":"Before you start","what":"Anticipate the necessary information & material","title":"Introduction to eyeScrollR","text":"eyeScrollR mainly designed work “unscrolled” images websites. can automatically captured various free paid extensions Chromium/Firefox browsers (probably ), manually constructed/modified necessary. resulting image unscrolled image, horizontal size equal browser viewing area vertical size equal total length webpage. Procuring image let reader’s preferences. image, need measurements monitor used experiment, eye-tracking dataset including participant’s mouse inputs fixation coordinates, set. measurements can done automatically Calibration page, can also input manually necessary.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"a-complete-example","dir":"Articles","previous_headings":"","what":"A complete example","title":"Introduction to eyeScrollR","text":"desire, able follow along (webpage used example can found ). Arguably, first step even getting eye-tracker data get measurements ready “calibration” phase.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"calibrate","dir":"Articles","previous_headings":"A complete example","what":"Calibrate","title":"Introduction to eyeScrollR","text":"first time using package, advisable check results automatic calibration manual one check consistency. discrepancy found, automatic calibration fails, please revert manual one. purpose calibration feed program size screen, location browsing area inside screen, many pixels scrolled time participant scrolls browser used. just go Calibration page follow instructions. scroll_pixels value, take screenshot whole screen including calibration page, save image file. several monitors computer, make sure take screenshot monitor eye-tracker used. resulting image therefore exact size monitor resolution.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"automatic-calibration","dir":"Articles","previous_headings":"A complete example > Calibrate","what":"Automatic calibration","title":"Introduction to eyeScrollR","text":"fastest easiest way calibrate. Just pass screenshot just took along scroll_pixels value scroll_calibration_auto function. instance: calibration now !","code":"library(eyeScrollR) library(png) calibration_image <- readPNG(\"calibrate.png\") calibration <- scroll_calibration_auto(calibration_image = calibration_image,                                        scroll_pixels = 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"manual-calibration","dir":"Articles","previous_headings":"A complete example > Calibrate","what":"Manual calibration","title":"Introduction to eyeScrollR","text":"automatic calibration fail, can always manually. Just open screenshot took earlier, look coordinates pixels top left bottom right browsing area. search made easier colored squares corners. graphics editors allow easily get image size coordinates pixel interested just zooming placing cursor (example, pixel interested colored black).  Repeat process bottom-rightmost pixel. just report values scroll_calibration_manual function:","code":"library(eyeScrollR) calibration <- scroll_calibration_manual(screen_width = 1920, screen_height = 1080,                                          top_left_x = 0, top_left_y = 89,                                          bottom_right_x = 1919, bottom_right_y = 1029,                                          scroll_pixels = 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"get-some-data-and-the-full-website-image","dir":"Articles","previous_headings":"A complete example","what":"Get some data, and the full website image","title":"Introduction to eyeScrollR","text":"next step get full, unscrolled image website. said earlier, several ways achieve , many browser extensions available. case, ended simple image:  image width height passed eye_tracker_fixation_scroll function next section.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"convert","dir":"Articles","previous_headings":"A complete example","what":"Convert","title":"Introduction to eyeScrollR","text":"careful examination video eye-tracking session participant key events, determined example participant looking webpage interest timestamps 3577 30864. need now import dataset, includes fixation coordinates, mouse events, timestamps. , can apply correction! dataset respect standard naming conventions iMotions software (see details eye_tracker_fixation_scroll help page).","code":"library(readr) test_data <- read_csv(\"test_data.csv\", comment = \"#\") corrected_data <- eye_tracker_fixation_scroll(eyes_data = test_data,                                               timestamp_start = 3577,                                               timestamp_stop = 30864,                                               image_width = 1920,                                               image_height = 1442,                                               calibration = calibration)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"output","dir":"Articles","previous_headings":"A complete example","what":"Output!","title":"Introduction to eyeScrollR","text":"Finally, can use built-heatmap generation function check everything went fine:","code":"heatmap_image <- readPNG(\"a_random_website.png\") generate_heatmap(data = corrected_data, heatmap_image = heatmap_image)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"a-more-complicated-setting","dir":"Articles","previous_headings":"","what":"A more complicated setting?","title":"Introduction to eyeScrollR","text":"example kept simple purpose, fixed area inside webpage. complicated example using fixed areas also changing size scrolldown, can visit article fixed areas","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathanael Larigaldie. Author, maintainer. Anna Dreneva. Author. Jacob Orquin. Author.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larigaldie N, Dreneva , Orquin J (2022). eyeScrollR: Correctly place eye-tracking fixation data areas scrollable websites. R package version 0.1.0, https://larigaldie-n.github.io/eyeScrollR/.","code":"@Manual{,   title = {eyeScrollR: Correctly place eye-tracking fixation data on areas of scrollable websites},   author = {Nathanael Larigaldie and Anna Dreneva and Jacob Orquin},   year = {2022},   note = {R package version 0.1.0},   url = {https://larigaldie-n.github.io/eyeScrollR/}, }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/index.html","id":"eyescrollr","dir":"","previous_headings":"","what":"Correctly place eye-tracking fixation data on areas of scrollable websites","title":"Correctly place eye-tracking fixation data on areas of scrollable websites","text":"R package correctly place eye-tracking fixation data areas scrollable websites, simplify creation heatmaps longer--screen images.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/index.html","id":"todo-list","dir":"","previous_headings":"","what":"ToDo list","title":"Correctly place eye-tracking fixation data on areas of scrollable websites","text":"Tests new functions Rename everything “anchor” “fixed_area” Documentation fixed areas Make sure scroll within area","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":null,"dir":"Reference","previous_headings":"","what":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"corrects eye-tracking coordinate data fit webpage     scrolled vertically participant","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"","code":"eye_tracker_fixation_scroll(   eyes_data,   timestamp_start,   timestamp_stop,   image_height,   image_width,   calibration,   time_shift = 0,   starting_scroll = 0,   output_file = \"eye_tracker_fixation_corrected.csv\",   anchors = list(),   rules = list(),   outside_image_is_na = TRUE,   na.rm = TRUE )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"eyes_data dataset timestamp_start starting timestamp .csv file participant watching scrollable (time_shift applied) timestamp_stop final timestamp .csv file participant watching scrollable (time_shift applied) image_height total height image (pixels) image_width total width image (pixels) calibration calibration list (see scroll_calibration function) time_shift [Optional] time shift parameter synchronize .csv file video recording (e.g. recording started start .csv). Default: 0 starting_scroll [Optional] participant start watching webpage top, can indicate y coordinate started (pixels). Default: 0 output_file [Optional] name output .csv file. empty string, just return data without creating new file. Default: empty string anchors [Optional] list potentially immovable areas inside scrollable (e.g. anchored menus website) - see manual correct usage. Default: empty list rules [Optional] list functions can act rules activate/deactivate immovables areas scrollable (e.g. menu disappears X pixels scrolled) - See manual correct. Default: empty list outside_image_is_na [Optional] Indicates values outside AOI (e.g. windows bar) set NA kept file/dataset. set FALSE, coordinates /AOI become negative. Default: TRUE na.rm [Optional] Indicates lines NA y values dropped final file/dataset. Default: TRUE","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"Dataset corrected x y's","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"","code":"if (FALSE) { test_anchors <- list(array(c(c(0,0,1902,95), c(0,0,1902,95),     c(1607,96,1902,905), c(1607,96,1902,905)), dim = c(4,2,2)),     array(c(c(0,0,1902,63), c(0,32,1902,95), c(1607,63,1902,900),     c(1607,63,1902,900)), dim = c(4,2,2)), array(c(c(1607,906,1920,1080),     c(1607,6481,1920,6655)), dim = c(4,2,1))) test_rules = list(rule_before_scrolling, rule_after_scrolling, rule_true) test_calibration <- scroll_calibration(1920, 1080, 88, 0, 40, 0, 100) test_data <- eye_tracker_fixation_scroll(anchors = test_anchors,     rules = test_rules, calibration = test_calibration) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_heatmap — generate_heatmap","title":"generate_heatmap — generate_heatmap","text":"Creates heatmap based dataset","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_heatmap — generate_heatmap","text":"","code":"generate_heatmap(data, heatmap_image)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_heatmap — generate_heatmap","text":"data dataset output eye_tracker_fixation_scroll heatmap_image image apply heatmap","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_heatmap — generate_heatmap","text":"plot image heatmap","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate_heatmap — generate_heatmap","text":"","code":"if (FALSE) { img <- readPNG(\"test.png\") test_data <- eye_tracker_fixation_scroll(anchors = test_anchors,     rules = test_rules, calibration = test_calibration) generate_heatmap(data = test_data, heatmap_image = img) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_after_scrolling — rule_after_scrolling","title":"rule_after_scrolling — rule_after_scrolling","text":"Helper function enforce anchor rules (one checks     total amount pixels scrolled top     website superior 30). NB: never     call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_after_scrolling — rule_after_scrolling","text":"","code":"rule_after_scrolling(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_after_scrolling — rule_after_scrolling","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_after_scrolling — rule_after_scrolling","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_after_scrolling — rule_after_scrolling","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_before_scrolling — rule_before_scrolling","title":"rule_before_scrolling — rule_before_scrolling","text":"Helper function enforce anchor rules (one checks     total amount pixels scrolled top     website inferior 30). NB: never     call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_before_scrolling — rule_before_scrolling","text":"","code":"rule_before_scrolling(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_before_scrolling — rule_before_scrolling","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_before_scrolling — rule_before_scrolling","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_before_scrolling — rule_before_scrolling","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_true — rule_true","title":"rule_true — rule_true","text":"Helper function enforce anchor rules (one always     true, meaning rule always enforced). NB:     never call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_true — rule_true","text":"","code":"rule_true(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_true — rule_true","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_true — rule_true","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_true — rule_true","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration — scroll_calibration","title":"scroll_calibration — scroll_calibration","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Can filled taking measurements hand, using     calibration tool.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration — scroll_calibration","text":"","code":"scroll_calibration(   screen_width,   screen_height,   top_left_x,   top_left_y,   bottom_right_x,   bottom_right_y,   scroll_pixels )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration — scroll_calibration","text":"screen_width Resolution width screen experiment conducted (pixels). E.g. 1920 screen_height Resolution height screen experiment conducted (pixels). E.g. 1080 top_left_x x coordinate top left pixel browser viewing area top_left_y y coordinate pixel bottom_right_x x coordinate bottom right pixel browser viewing area bottom_right_y y coordinate pixel scroll_pixels amount pixels scrolled mouse scroll (depends browser)","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration — scroll_calibration","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration — scroll_calibration","text":"","code":"calibration <- scroll_calibration(1920, 1080, 88, 0, 40, 0, 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration_auto — scroll_calibration_auto","title":"scroll_calibration_auto — scroll_calibration_auto","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Uses screenshot full screen including calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration_auto — scroll_calibration_auto","text":"","code":"scroll_calibration_auto(calibration_image, scroll_pixels)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration_auto — scroll_calibration_auto","text":"calibration_image screenshot, loaded large array (e.g. using readPNG) scroll_pixels amount pixels scrolled mouse scroll (depends browser). Output calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration_auto — scroll_calibration_auto","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration_auto — scroll_calibration_auto","text":"","code":"if (FALSE) { library(png) img <- readPNG(\"calibrate.png\") calibration <- scroll_calibration_auto(calibration_image = img, scroll_pixels = 100) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration_manual — scroll_calibration_manual","title":"scroll_calibration_manual — scroll_calibration_manual","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Uses values taken hand","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration_manual — scroll_calibration_manual","text":"","code":"scroll_calibration_manual(   screen_width,   screen_height,   top_left_x,   top_left_y,   bottom_right_x,   bottom_right_y,   scroll_pixels )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration_manual — scroll_calibration_manual","text":"screen_width Resolution width screen experiment conducted (pixels). E.g. 1920 screen_height Resolution height screen experiment conducted (pixels). E.g. 1080 top_left_x x coordinate top left pixel browser viewing area top_left_y y coordinate pixel bottom_right_x x coordinate bottom right pixel browser viewing area bottom_right_y y coordinate pixel scroll_pixels amount pixels scrolled mouse scroll (depends browser). Output calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration_manual — scroll_calibration_manual","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration_manual — scroll_calibration_manual","text":"","code":"calibration <- scroll_calibration_manual(1920, 1080, 88, 0, 40, 0, 100)"}]
=======
[{"path":[]},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"understand-the-use-case-scenario","dir":"Articles","previous_headings":"Before you start","what":"Understand the use-case scenario","title":"Introduction to eyeScrollR","text":"Consider situation, participant fixates 5 different areas screen (represented red green spots) browsing website, scrolls , fixates 5 exact areas:  Although red fixation spots indeed match content situations, green fixations spots don’t; analysis content fixated convert screen coordinates “content coordinates”. words, unscrolled content screen single long image, like fixations correctly placed , :  … exactly package . top , may often want get rid anything outside website (browser header, Windows bar bottom, …), areas websites might fixed follow screen participant scrolls . eyeScrollR equipped deal situations. Please note now, eyeScrollR tested data iMotions software. Future support software expected, yet guaranteed.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"set-up-the-experimental-setting","dir":"Articles","previous_headings":"Before you start","what":"Set up the experimental setting","title":"Introduction to eyeScrollR","text":"Although eyeScrollR dealing participant’s data, getting reliable accurate placements timings may require change browser settings. steps completely necessary, omitted may often result pixels inaccuracy fixation’s coordinates, may temporarily ahead time ~150ms scrolling blur periods. Quite rarely, may mess whole file; especially participant fast-paced erratic scrolling pattern. recommended deactivate smooth scrolling browser, get rid side scrollbar. Chrome/Chromium browsers, deactivating smooth scrolling can easily done typing “chrome://flags/” address bar, disabling “Smooth Scrolling” option. Similarly, scrollbar can hidden enabling “Overlay Scrollbars” option. Firefox browsers, free extensions can easily found hide scrollbar smooth scrolling can deactivated directly settings menu.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"anticipate-the-necessary-information-material","dir":"Articles","previous_headings":"Before you start","what":"Anticipate the necessary information & material","title":"Introduction to eyeScrollR","text":"eyeScrollR mainly designed work “unscrolled” images websites. can automatically captured various free paid extensions Chromium/Firefox browsers (probably ), manually constructed/modified necessary. resulting image unscrolled image, horizontal size equal browser viewing area vertical size equal total length webpage. Procuring image let reader’s preferences. image, need measurements monitor used experiment, eye-tracking dataset including participant’s mouse inputs fixation coordinates, set. measurements can done automatically Calibration page, can also input manually necessary.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"a-complete-example","dir":"Articles","previous_headings":"","what":"A complete example","title":"Introduction to eyeScrollR","text":"desire, able follow along (webpage used example can found ). Arguably, first step even getting eye-tracker data get measurements ready “calibration” phase.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"calibrate","dir":"Articles","previous_headings":"A complete example","what":"Calibrate","title":"Introduction to eyeScrollR","text":"first time using package, advisable check results automatic calibration manual one check consistency. discrepancy found, automatic calibration fails, please revert manual one. purpose calibration feed program size screen, location browsing area inside screen, many pixels scrolled time participant scrolls browser used. just go Calibration page follow instructions. scroll_pixels value, take screenshot whole screen including calibration page, save image file. several monitors computer, make sure take screenshot monitor eye-tracker used. resulting image therefore exact size monitor resolution.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"automatic-calibration","dir":"Articles","previous_headings":"A complete example > Calibrate","what":"Automatic calibration","title":"Introduction to eyeScrollR","text":"fastest easiest way calibrate. Just pass screenshot just took along scroll_pixels value scroll_calibration_auto function. instance: calibration now !","code":"library(eyeScrollR) library(png) calibration_image <- readPNG(\"calibrate.png\") calibration <- scroll_calibration_auto(calibration_image = calibration_image,                                        scroll_pixels = 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"manual-calibration","dir":"Articles","previous_headings":"A complete example > Calibrate","what":"Manual calibration","title":"Introduction to eyeScrollR","text":"automatic calibration fail, can always manually. Just open screenshot took earlier, look coordinates pixels top left bottom right browsing area. search made easier colored squares corners. graphics editors allow easily get image size coordinates pixel interested just zooming placing cursor (example, pixel interested colored black).  Repeat process bottom-rightmost pixel. just report values scroll_calibration_manual function:","code":"library(eyeScrollR) calibration <- scroll_calibration_manual(screen_width = 1920, screen_height = 1080,                                          top_left_x = 0, top_left_y = 89,                                          bottom_right_x = 1919, bottom_right_y = 1029,                                          scroll_pixels = 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"get-some-data-and-the-full-website-image-visited-by-the-participant","dir":"Articles","previous_headings":"A complete example","what":"Get some data, and the full website image visited by the participant","title":"Introduction to eyeScrollR","text":"next step get full, unscrolled image website. said earlier, several ways achieve , many browser extensions available. case, ended simple image:  image width height passed eye_tracker_fixation_scroll function next section.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"convert","dir":"Articles","previous_headings":"A complete example","what":"Convert","title":"Introduction to eyeScrollR","text":"careful examination video eye-tracking session participant key events, determined example participant looking webpage interest timestamps 3577 30864. need now import dataset, includes fixation coordinates, key events. , can apply correction!","code":"library(readr) test_data <- read_csv(\"test_data.csv\", comment = \"#\") corrected_data <- eye_tracker_fixation_scroll(eyes_data = test_data,                                               timestamp_start = 3577,                                               timestamp_stop = 30864,                                               image_width = 1920,                                               image_height = 1442,                                               calibration = calibration)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"output","dir":"Articles","previous_headings":"A complete example","what":"Output!","title":"Introduction to eyeScrollR","text":"Finally, can use built-heatmap generation function check everything went fine:","code":"heatmap_image <- readPNG(\"a_random_website.png\") generate_heatmap(data = corrected_data, heatmap_image = heatmap_image)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/articles/eyeScrollR.html","id":"a-more-complicated-setting","dir":"Articles","previous_headings":"","what":"A more complicated setting?","title":"Introduction to eyeScrollR","text":"example kept simple purpose, fixed area inside webpage. complicated example using fixed areas also changing size scrolldown, can visit article fixed areas","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathanael Larigaldie. Author, maintainer. Anna Dreneva. Author. Jacob Orquin. Author.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Larigaldie N, Dreneva , Orquin J (2022). eyeScrollR: Correctly place eye-tracking fixation data areas scrollable websites. R package version 0.1.0, https://larigaldie-n.github.io/eyeScrollR/.","code":"@Manual{,   title = {eyeScrollR: Correctly place eye-tracking fixation data on areas of scrollable websites},   author = {Nathanael Larigaldie and Anna Dreneva and Jacob Orquin},   year = {2022},   note = {R package version 0.1.0},   url = {https://larigaldie-n.github.io/eyeScrollR/}, }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/index.html","id":"eyescrollr","dir":"","previous_headings":"","what":"Correctly place eye-tracking fixation data on areas of scrollable websites","title":"Correctly place eye-tracking fixation data on areas of scrollable websites","text":"R package correctly place eye-tracking fixation data areas scrollable websites, simplify creation heatmaps longer--screen images.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/index.html","id":"todo-list","dir":"","previous_headings":"","what":"ToDo list","title":"Correctly place eye-tracking fixation data on areas of scrollable websites","text":"Tests new functions Rename everything “anchor” “fixed_area” Documentation fixed areas Make sure scroll within area","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":null,"dir":"Reference","previous_headings":"","what":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"corrects eye-tracking coordinate data fit webpage     scrolled vertically participant","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"","code":"eye_tracker_fixation_scroll(   eyes_data,   timestamp_start,   timestamp_stop,   image_height,   image_width,   calibration,   time_shift = 0,   starting_scroll = 0,   output_file = \"eye_tracker_fixation_corrected.csv\",   anchors = list(),   rules = list(),   outside_image_is_na = TRUE,   na.rm = TRUE )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"eyes_data dataset timestamp_start starting timestamp .csv file participant watching scrollable (time_shift applied) timestamp_stop final timestamp .csv file participant watching scrollable (time_shift applied) image_height total height image (pixels) image_width total width image (pixels) calibration calibration list (see scroll_calibration function) time_shift [Optional] time shift parameter synchronize .csv file video recording (e.g. recording started start .csv). Default: 0 starting_scroll [Optional] participant start watching webpage top, can indicate y coordinate started (pixels). Default: 0 output_file [Optional] name output .csv file. empty string, just return data without creating new file. Default: empty string anchors [Optional] list potentially immovable areas inside scrollable (e.g. anchored menus website) - see manual correct usage. Default: empty list rules [Optional] list functions can act rules activate/deactivate immovables areas scrollable (e.g. menu disappears X pixels scrolled) - See manual correct. Default: empty list outside_image_is_na [Optional] Indicates values outside AOI (e.g. windows bar) set NA kept file/dataset. set FALSE, coordinates /AOI become negative. Default: TRUE na.rm [Optional] Indicates lines NA y values dropped final file/dataset. Default: TRUE","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"Dataset corrected x y's","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/eye_tracker_fixation_scroll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"eye_tracker_fixation_scroll — eye_tracker_fixation_scroll","text":"","code":"if (FALSE) { test_anchors <- list(array(c(c(0,0,1902,95), c(0,0,1902,95),     c(1607,96,1902,905), c(1607,96,1902,905)), dim = c(4,2,2)),     array(c(c(0,0,1902,63), c(0,32,1902,95), c(1607,63,1902,900),     c(1607,63,1902,900)), dim = c(4,2,2)), array(c(c(1607,906,1920,1080),     c(1607,6481,1920,6655)), dim = c(4,2,1))) test_rules = list(rule_before_scrolling, rule_after_scrolling, rule_true) test_calibration <- scroll_calibration(1920, 1080, 88, 0, 40, 0, 100) test_data <- eye_tracker_fixation_scroll(anchors = test_anchors,     rules = test_rules, calibration = test_calibration) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_heatmap — generate_heatmap","title":"generate_heatmap — generate_heatmap","text":"Creates heatmap based dataset","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_heatmap — generate_heatmap","text":"","code":"generate_heatmap(data, heatmap_image)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_heatmap — generate_heatmap","text":"data dataset output eye_tracker_fixation_scroll heatmap_image image apply heatmap","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_heatmap — generate_heatmap","text":"plot image heatmap","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/generate_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate_heatmap — generate_heatmap","text":"","code":"if (FALSE) { img <- readPNG(\"test.png\") test_data <- eye_tracker_fixation_scroll(anchors = test_anchors,     rules = test_rules, calibration = test_calibration) generate_heatmap(data = test_data, heatmap_image = img) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_after_scrolling — rule_after_scrolling","title":"rule_after_scrolling — rule_after_scrolling","text":"Helper function enforce anchor rules (one checks     total amount pixels scrolled top     website superior 30). NB: never     call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_after_scrolling — rule_after_scrolling","text":"","code":"rule_after_scrolling(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_after_scrolling — rule_after_scrolling","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_after_scrolling — rule_after_scrolling","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_after_scrolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_after_scrolling — rule_after_scrolling","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_before_scrolling — rule_before_scrolling","title":"rule_before_scrolling — rule_before_scrolling","text":"Helper function enforce anchor rules (one checks     total amount pixels scrolled top     website inferior 30). NB: never     call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_before_scrolling — rule_before_scrolling","text":"","code":"rule_before_scrolling(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_before_scrolling — rule_before_scrolling","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_before_scrolling — rule_before_scrolling","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_before_scrolling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_before_scrolling — rule_before_scrolling","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":null,"dir":"Reference","previous_headings":"","what":"rule_true — rule_true","title":"rule_true — rule_true","text":"Helper function enforce anchor rules (one always     true, meaning rule always enforced). NB:     never call function , can use basis     create rule. arguments automatically passed     rule function eye_tracker_fixation_scroll","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rule_true — rule_true","text":"","code":"rule_true(timestamp, event, x, y, array_anchors, flag, scroll)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rule_true — rule_true","text":"timestamp timestamp current line .csv file event event column line x x parameter (eye gaze) line y y parameter (eye gaze) line array_anchors array anchors linked rule flag boolean says rule TRUE FALSE moment scroll total amount pixels scrolled top website moment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rule_true — rule_true","text":"boolean saying rule now enforced ","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/rule_true.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rule_true — rule_true","text":"","code":"rules <- list(rule_before_scrolling, rule_after_scrolling, rule_true)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration — scroll_calibration","title":"scroll_calibration — scroll_calibration","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Can filled taking measurements hand, using     calibration tool.","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration — scroll_calibration","text":"","code":"scroll_calibration(   screen_width,   screen_height,   top_left_x,   top_left_y,   bottom_right_x,   bottom_right_y,   scroll_pixels )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration — scroll_calibration","text":"screen_width Resolution width screen experiment conducted (pixels). E.g. 1920 screen_height Resolution height screen experiment conducted (pixels). E.g. 1080 top_left_x x coordinate top left pixel browser viewing area top_left_y y coordinate pixel bottom_right_x x coordinate bottom right pixel browser viewing area bottom_right_y y coordinate pixel scroll_pixels amount pixels scrolled mouse scroll (depends browser)","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration — scroll_calibration","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration — scroll_calibration","text":"","code":"calibration <- scroll_calibration(1920, 1080, 88, 0, 40, 0, 100)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration_auto — scroll_calibration_auto","title":"scroll_calibration_auto — scroll_calibration_auto","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Uses screenshot full screen including calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration_auto — scroll_calibration_auto","text":"","code":"scroll_calibration_auto(calibration_image, scroll_pixels)"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration_auto — scroll_calibration_auto","text":"calibration_image screenshot, loaded large array (e.g. using readPNG) scroll_pixels amount pixels scrolled mouse scroll (depends browser). Output calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration_auto — scroll_calibration_auto","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration_auto — scroll_calibration_auto","text":"","code":"if (FALSE) { library(png) img <- readPNG(\"calibrate.png\") calibration <- scroll_calibration_auto(calibration_image = img, scroll_pixels = 100) }"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"scroll_calibration_manual — scroll_calibration_manual","title":"scroll_calibration_manual — scroll_calibration_manual","text":"Creates calibration list use eye_tracker_fixation_scroll     function. Uses values taken hand","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scroll_calibration_manual — scroll_calibration_manual","text":"","code":"scroll_calibration_manual(   screen_width,   screen_height,   top_left_x,   top_left_y,   bottom_right_x,   bottom_right_y,   scroll_pixels )"},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scroll_calibration_manual — scroll_calibration_manual","text":"screen_width Resolution width screen experiment conducted (pixels). E.g. 1920 screen_height Resolution height screen experiment conducted (pixels). E.g. 1080 top_left_x x coordinate top left pixel browser viewing area top_left_y y coordinate pixel bottom_right_x x coordinate bottom right pixel browser viewing area bottom_right_y y coordinate pixel scroll_pixels amount pixels scrolled mouse scroll (depends browser). Output calibration webpage","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scroll_calibration_manual — scroll_calibration_manual","text":"list representing calibration screen & browser used experiment","code":""},{"path":"https://larigaldie-n.github.io/eyeScrollR/reference/scroll_calibration_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scroll_calibration_manual — scroll_calibration_manual","text":"","code":"calibration <- scroll_calibration_manual(1920, 1080, 88, 0, 40, 0, 100) #> Error in scroll_calibration_manual(1920, 1080, 88, 0, 40, 0, 100): could not find function \"scroll_calibration_manual\""}]
>>>>>>> 968fbbddf8721a071bf0478e6cc1df74689712aa
